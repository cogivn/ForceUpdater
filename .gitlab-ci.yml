image: openjdk:8-jdk

variables:
  # Goto in Settings-->CI/CD-->Variables and
  # create ANDROID_COMPILE_SDK, $ANDROID_BUILD_TOOLS variables, ect.
  # Refer: https://android.jlelse.eu/android-gitlab-ci-cd-sign-deploy-3ad66a8f24bf
  ANDROID_COMPILE_SDK: $ANDROID_COMPILE_SDK
  ANDROID_BUILD_TOOLS: $ANDROID_BUILD_TOOLS
  ANDROID_SDK_TOOLS: "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .gradle/wrapper
    - .gradle/caches

stages:
  - build
  - test
  - release

lintDebug:
  stage: build
  only:
    - tags
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  stage: build
  only:
    - tags
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs/apk

debugTests:
  stage: test
  only:
    - tags
  script:
    - ./gradlew -Pci --console=plain :app:testDebug
